import string # Импорт функции из библеотеки Python для форматирования строк

def canOpenFile(file, mode): # В функцию вносим файл и режим открытия
    result = False # Задаём отрицательный результат для проверки кода в блоке try
    try: # Пробуем открыть файл, указанный пользователем, если успешно, то возвращается результат True
        with open(file, mode) as old_file:
            result = True
    except FileNotFoundError: # Обработка исключения, если имя файла не найдено, также если не указан аргумент строки
        print("ОШИБКА! Файла {} не существует. Попробуйте указать другое имя или путь.".format(file))
    except PermissionError: # Обработка исключения в случае, если у пользователя нет прав на взаимодействие с файлом
        print("ОШИБКА! У вас недостаточно прав на просмотр файла {}".format(file)) 
    except BaseException as e: # Обработка любого другого исключения, на случай, если оно будет найдено
        print("Неизвестная ошибка {}".format(str(e)))
    finally: # Вывод результата кода из блока try при любом исходе (True или False)
        return result # Возврат переменной result в файл __main__.py

alpha = list(string.ascii_lowercase) # Присваеваем переменной alpha создания списка с набором eng алфавита в нижнем регистре

def processFile(file):
    res = dict({key:0 for key in alpha}) # res - переменная отвечающая за словарь, в котором ключ буква алфавита из alpha и у каждого ключа изначальное значение задано ноль
    count = 0 # задаем счетчик
    if(canOpenFile(file,'r')): # Если мы можем открыть файл на чтение без ошибок
        with open(file, 'r') as f: # Мы открываем файл с автоматическим закрытием
            for line in f: # В каждой линии файла
                words = line.split() # делим строку на слова
                for word in words: # В каждом слове из разделенных слов мы ищем букву
                    count = count + 1 # при встрече с каждой буквой алфавита счетчик увеличивается на 1
                    for ch in alpha: # для каждого символа в списке alpha, содержащий eng алфавит
                        if ch in word: # Каждый найденный символ в слове вносим в словарь
                            res[ch] = res[ch] + 1  
        if count: # если буквы больше не встречаютя, то
            for key1 in res: # Для каждого ключа в словаре
                res[key1]= round((res[key1]/count)*100, 4) # Значение переводим в проценты и округляем значение до 4-х знаков после запятой      
    return res # Возвращаем результат